[{"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\index.js":"1","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\App.js":"2","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\MainComponent.js":"3","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\HomeComponent.js":"4","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\HeaderComponent.js":"5","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\CertificatesComponent.js":"6","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\AboutComponent.js":"7","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\GamesComponent.js":"8","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\shared\\url.js":"9"},{"size":484,"mtime":1634615930379,"results":"10","hashOfConfig":"11"},{"size":273,"mtime":1634756536414,"results":"12","hashOfConfig":"11"},{"size":1139,"mtime":1634757384465,"results":"13","hashOfConfig":"11"},{"size":483,"mtime":1634758703307,"results":"14","hashOfConfig":"11"},{"size":13036,"mtime":1634758209197,"results":"15","hashOfConfig":"11"},{"size":1075,"mtime":1634756373709,"results":"16","hashOfConfig":"11"},{"size":2425,"mtime":1634757566091,"results":"17","hashOfConfig":"11"},{"size":4537,"mtime":1634757731406,"results":"18","hashOfConfig":"11"},{"size":46,"mtime":1612921734810,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3jwhp1",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\index.js",[],"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\App.js",[],"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\MainComponent.js",[],"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\HomeComponent.js",[],"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\HeaderComponent.js",["41"],"import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavbarToggler,\r\n  Collapse,\r\n  NavItem,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Jumbotron,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Alert } from \"bootstrap\";\r\n// import LoginComponent from \"./loginModalComponent\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isLoginOpen: false,\r\n      isRegisterOpen: false,\r\n      username: \"\",\r\n      password: \"\",\r\n      isLogged: false,\r\n      accounts: [],\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.toggleRegister = this.toggleRegister.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.getAccounts();\r\n  // }\r\n\r\n  toggleNav() {\r\n    this.setState({ isNavOpen: !this.state.isNavOpen });\r\n  }\r\n  toggleModal() {\r\n    this.setState({ isLoginOpen: !this.state.isLoginOpen });\r\n  }\r\n  toggleRegister() {\r\n    this.setState({ isLoginOpen: false });\r\n    this.setState({ isRegisterOpen: !this.state.isRegisterOpen });\r\n  }\r\n  handleSubmit = (e) => {\r\n    this.toggleModal();\r\n    e.preventDefault();\r\n\r\n    // let data = new FormData(e.target);\r\n    // let accMatch = this.state.accounts.map((acc) => {\r\n    //   if (\r\n    //     data.get(\"username\") === acc.username &&\r\n    //     data.get(\"password\") === acc.password\r\n    //   ) {\r\n    //     console.log(\"success\");\r\n    //     this.setState({ username: acc.username });\r\n    //     this.setState({ isLogged: true });\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  // handleRegister = (e) => {\r\n  //   this.toggleRegister();\r\n  //   e.preventDefault();\r\n  //   let data = new FormData(e.target);\r\n  //   let newUser = {\r\n  //     username: data.get(\"username\"),\r\n  //     password: data.get(\"password\"),\r\n  //   };\r\n  //   let postOptions = {\r\n  //     method: \"POST\",\r\n  //     headers: { \"Content-Type\": \"application/json\" },\r\n  //     body: JSON.stringify({\r\n  //       username: newUser.username,\r\n  //       password: newUser.password,\r\n  //     }),\r\n  //   };\r\n  //   fetch(url + \"accounts\", postOptions).then((response) => {\r\n  //     response.json();\r\n  //   });\r\n  //   this.getAccounts();\r\n  // };\r\n\r\n  //get accounts\r\n  // getAccounts = () => {\r\n  //   const pull = {\r\n  //     method: \"GET\",\r\n  //     headers: { \"Content-Type\": \"application/json\" },\r\n  //   };\r\n\r\n  //   fetch(url + \"accounts\", pull)\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       this.setState({ accounts: data });\r\n  //     });\r\n  // };\r\n  // logout = () => {\r\n  //   console.log(\"logging out\");\r\n  //   this.setState({ isLogged: false });\r\n  // };\r\n\r\n  render() {\r\n    if (this.state.isLogged === false) {\r\n      return (\r\n        <div className=\"header-container\">\r\n          <Jumbotron fluid>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h1>Will work for coffee</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Jumbotron>\r\n          <Navbar dark sticky=\"top\" expand=\"md\">\r\n            <NavbarBrand></NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav className=\"col\" navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/certificates\">\r\n                    Certificates\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/games\">\r\n                    Games\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/about\">\r\n                    About Me\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contact\">\r\n                    Contact Me\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Button onClick={this.toggleModal}>Login</Button>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Modal isOpen={this.state.isLoginOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    innerRef={(input) => (this.username = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    handleRef={(input) => (this.password = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check htmlFor=\"remember\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      id=\"remember\"\r\n                      name=\"remember\"\r\n                      handleRef={(input) => (this.remember = input)}\r\n                    />\r\n                    Remember Me\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Button value=\"submit\" type=\"submit\">\r\n                    Login\r\n                  </Button>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Button onClick={this.toggleRegister}>Register</Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n\r\n          <Modal\r\n            isOpen={this.state.isRegisterOpen}\r\n            toggle={this.toggleRegister}>\r\n            <ModalHeader toggle={this.toggleRegister}>Register</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.handleRegister}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    innerRef={(input) => (this.username = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    handleRef={(input) => (this.password = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check htmlFor=\"remember\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      id=\"remember\"\r\n                      name=\"remember\"\r\n                      handleRef={(input) => (this.remember = input)}\r\n                    />\r\n                    Remember Me\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup></FormGroup>\r\n                <FormGroup>\r\n                  <Button type=\"submit\" value=\"submit\">\r\n                    Register\r\n                  </Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    } else {\r\n      //IS NOT LOGGED STARTS HERE\r\n      return (\r\n        <div className=\"header-container\">\r\n          <Jumbotron fluid>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h1>Oh god what do you title a page like this?</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Jumbotron>\r\n          <Navbar dark sticky=\"top\" expand=\"md\">\r\n            <NavbarBrand></NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav className=\"col\" navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/certificates\">\r\n                    Certificates\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/projects\">\r\n                    Projects\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/about\">\r\n                    About Me\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contact\">\r\n                    Contact Me\r\n                  </NavLink>\r\n                </NavItem>\r\n                Welcome {this.state.username}\r\n              </Nav>\r\n              <Button onClick={this.logout}>Log Out</Button>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Modal isOpen={this.state.isLoginOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    innerRef={(input) => (this.username = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    handleRef={(input) => (this.password = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check htmlFor=\"remember\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      id=\"remember\"\r\n                      name=\"remember\"\r\n                      handleRef={(input) => (this.remember = input)}\r\n                    />\r\n                    Remember Me\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Button value=\"submit\" type=\"submit\">\r\n                    Login\r\n                  </Button>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Button onClick={this.toggleRegister}>Register</Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n\r\n          <Modal\r\n            isOpen={this.state.isRegisterOpen}\r\n            toggle={this.toggleRegister}>\r\n            <ModalHeader toggle={this.toggleRegister}>Register</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.handleRegister}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    innerRef={(input) => (this.username = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    handleRef={(input) => (this.password = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check htmlFor=\"remember\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      id=\"remember\"\r\n                      name=\"remember\"\r\n                      handleRef={(input) => (this.remember = input)}\r\n                    />\r\n                    Remember Me\r\n                  </Label>\r\n                </FormGroup>\r\n                <FormGroup></FormGroup>\r\n                <FormGroup>\r\n                  <Button type=\"submit\" value=\"submit\">\r\n                    Register\r\n                  </Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\CertificatesComponent.js",[],"C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\AboutComponent.js",["42"],"import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardOverlay, CardTitle } from \"reactstrap\";\r\nimport CardBody from \"reactstrap/lib/CardBody\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          Hi, I'm Jared. I consume coffee in irresponsibly dangerous quantities\r\n          and like coding.\r\n          <br />\r\n          <br />\r\n          I'm currently studying full-stack development at{\" \"}\r\n          <a href=\"https://nucamp.co\">Nucamp</a>, a hybrid part-time coding\r\n          bootcamp.\r\n          <br /> <br />\r\n          I'm building this site and using it to practice what I learn and\r\n          display my progress. If you're here and you don't know me, you've\r\n          clearly made some poor decisions in life and I would recommend calmly\r\n          backing away and forgetting anything and everything you see here.\r\n          <br />\r\n          <br />\r\n          <div className=\"smallText\">\r\n            Unless you're either hiring or wish to provide me with coffee. In\r\n            which case, email me.\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"content\">\r\n          This space is to display ongoing personal projects.\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Card>\r\n              <CardImg width=\"100%\" src=\"logo192.png\" />\r\n              <CardTitle className=\"text-center border-bottom border-top\">\r\n                Game Server Console\r\n              </CardTitle>\r\n              <CardBody>\r\n                Flask Router that handles web requests and launches custom\r\n                scripts to manage various game servers. A live demonstration of\r\n                this is available in the Games section of this site. (WIP,\r\n                rebuilding this!)\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Card>\r\n              <CardImg width=\"100%\" src=\"logo192.png\" />\r\n              <CardTitle>Project</CardTitle>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Card>\r\n              <CardImg width=\"100%\" src=\"logo192.png\" />\r\n              <CardTitle>Project</CardTitle>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\components\\GamesComponent.js",["43"],"import { Button, Card, CardImg, CardTitle, CardBody } from \"reactstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { url } from \"../shared/url\";\r\nexport default class Games extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mineServ: \"Offline\",\r\n      valServ: \"Offline\",\r\n    };\r\n  }\r\n  // startMinecraft = () => {\r\n  //   let get = {\r\n  //     method: \"GET\",\r\n  //   };\r\n  //   fetch(url + \"games/minecraft\", get)\r\n  //     .then((response) => {\r\n  //       response.json();\r\n  //     })\r\n  //     .catch();\r\n  // };\r\n  // stopMinecraft = () => {\r\n  //   let get = {\r\n  //     method: \"GET\",\r\n  //   };\r\n  //   fetch(url + \"games/minecraftstop\", get)\r\n  //     .then((response) => {\r\n  //       response.json();\r\n  //     })\r\n  //     .catch();\r\n  // };\r\n  // startValheim = () => {\r\n  //   let get = {\r\n  //     method: \"GET\",\r\n  //   };\r\n  //   fetch(url + \"games/valheim\", get)\r\n  //     .then((response) => {\r\n  //       response.json();\r\n  //     })\r\n  //     .catch();\r\n  // };\r\n  // stopValheim = () => {\r\n  //   let get = {\r\n  //     method: \"GET\",\r\n  //   };\r\n  //   fetch(url + \"games/valheim\", get).then((response) => {\r\n  //     response.json();\r\n  //   });\r\n  // };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          These game servers are hosted on a dedicated machine. Specific\r\n          instructions to connect to the hosted game world will be included with\r\n          each game listed! (WIP, the backend for this is being rebuilt in\r\n          Flask)\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 col-md-4 d-flex justify-content-center\">\r\n            <Card>\r\n              <CardImg\r\n                top\r\n                className=\"gameIcon\"\r\n                src=\"minecraftimg.png\"\r\n                alt=\"Minecraft Picture\"\r\n              />\r\n              <CardTitle\r\n                tag=\"h5\"\r\n                className=\"text-center text-success border-bottom border-top\">\r\n                Minecraft\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"row justify-content-center\">\r\n                  Server is: {this.state.mineServ}{\" \"}\r\n                </div>\r\n                <div className=\"container\">\r\n                  <div className=\"row justify-content-center\">\r\n                    <Button\r\n                      className=\"gameButton btn btn-success text-center\"\r\n                      //onClick={this.startMinecraft}\r\n                    >\r\n                      Start server\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"row justify-content-center\">\r\n                    <Button\r\n                      className=\"gameButton btn btn-danger\"\r\n                      //onClick={this.stopMinecraft}\r\n                    >\r\n                      Stop Server\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-4 d-flex justify-content-center\">\r\n            <Card>\r\n              <CardImg\r\n                top\r\n                className=\"gameIcon\"\r\n                src=\"valheimimg.png\"\r\n                alt=\"Valheim Picture\"\r\n              />\r\n              <CardTitle\r\n                tag=\"h5\"\r\n                className=\"text-center text-success border-bottom border-top\">\r\n                Valheim\r\n              </CardTitle>\r\n              <CardBody>\r\n                <div className=\"row justify-content-center\">\r\n                  Server is: {this.state.valServ}\r\n                </div>\r\n                <div className=\"container\">\r\n                  <div className=\"row justify-content-center\">\r\n                    <Button\r\n                      className=\"gameButton btn btn-success text-center\"\r\n                      //onClick={this.startMinecraft}\r\n                    >\r\n                      Start server\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"row justify-content-center\">\r\n                    <Button\r\n                      className=\"gameButton btn btn-danger\"\r\n                      //onClick={this.stopMinecraft}\r\n                    >\r\n                      Stop Server\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\jared\\OneDrive\\Desktop\\personalsite\\caramellatte-dev\\src\\shared\\url.js",[],{"ruleId":"44","severity":1,"message":"45","line":20,"column":10,"nodeType":"46","messageId":"47","endLine":20,"endColumn":15},{"ruleId":"44","severity":1,"message":"48","line":2,"column":25,"nodeType":"46","messageId":"47","endLine":2,"endColumn":36},{"ruleId":"44","severity":1,"message":"49","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":13},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'CardOverlay' is defined but never used.","'url' is defined but never used."]